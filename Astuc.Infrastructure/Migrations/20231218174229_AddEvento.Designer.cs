// <auto-generated />
using System;
using EIRL.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EIRL.Infrastructure.Migrations
{
    [DbContext(typeof(AstucContext))]
    [Migration("20231218174229_AddEvento")]
    partial class AddEvento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Astuc.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsGratis")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaYHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Combustible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CantidadGalones")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoPorGalon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Factura")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("KmFinal")
                        .HasColumnType("int");

                    b.Property<int>("KmInicial")
                        .HasColumnType("int");

                    b.Property<int>("Recorrido")
                        .HasColumnType("int");

                    b.Property<decimal>("Rendimiento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoCombustible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViajeId");

                    b.ToTable("Combustibles");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoCombustible")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CostoViaje")
                        .HasColumnType("int");

                    b.Property<int>("Ganancias")
                        .HasColumnType("int");

                    b.Property<int>("Gastos")
                        .HasColumnType("int");

                    b.Property<int>("Llantas")
                        .HasColumnType("int");

                    b.Property<int>("Mantenimiento")
                        .HasColumnType("int");

                    b.Property<int>("Otros")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Pasajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViajeId");

                    b.ToTable("Pasajeros");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Autorizacion")
                        .HasColumnType("bit");

                    b.Property<string>("Chofer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostoViaje")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime2");

                    b.Property<string>("LugarDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarSalida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPlaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Combustible", b =>
                {
                    b.HasOne("EIRL.Domain.Entities.Viaje", null)
                        .WithMany("Combustibles")
                        .HasForeignKey("ViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Pasajero", b =>
                {
                    b.HasOne("EIRL.Domain.Entities.Viaje", null)
                        .WithMany("Pasajeros")
                        .HasForeignKey("ViajeId");
                });

            modelBuilder.Entity("EIRL.Domain.Entities.Viaje", b =>
                {
                    b.Navigation("Combustibles");

                    b.Navigation("Pasajeros");
                });
#pragma warning restore 612, 618
        }
    }
}
